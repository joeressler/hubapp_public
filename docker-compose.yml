services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    command: npm start
    volumes:
      - ./frontend:/app/frontend
      - frontend_node_modules:/app/node_modules
    environment:
      - NODE_ENV=production
    user: "1001:1001"
    networks:
      - app-network
    depends_on:
      backend:
        condition: service_started
    ports:
      - "3000:3000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      - FLASK_ENV=production
      - PYTHONPATH=/app/backend
      - MYSQL_HOST=${MYSQL_HOST}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PWD=${MYSQL_PWD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - FLASK_SECRET_KEY=${FLASK_SECRET_KEY}
      - RECAPTCHA_PUBLIC_KEY=${RECAPTCHA_PUBLIC_KEY}
      - RECAPTCHA_PRIVATE_KEY=${RECAPTCHA_PRIVATE_KEY}
      - VERIFY_URL=${VERIFY_URL}
      - PASSWORD_PIN=${PASSWORD_PIN}
      - SENTRY_DSN=${SENTRY_DSN}
    volumes:
      - ./backend:/app/backend
      - vosk-models:/app/models
      - ./backend/utils/vector_db/storage:/app/backend/utils/vector_db/storage
    env_file:
      - .env
    command: ["python", "-m", "flask", "run", "--host=0.0.0.0", "--port=8080"]
    networks:
      - app-network
    ports:
      - "8080:8080"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  voice:
    build:
      context: ./voice
      dockerfile: Dockerfile
    volumes:
      - ./voice:/app/voice
      - voice_audio:/app/audio
    command: ["./main"]
    networks:
      - app-network
    ports:
      - "8081:8081"
    environment:
      - CGO_ENABLED=1
      - GIN_MODE=release
    depends_on:
      - backend
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s


networks:
  app-network:
    driver: bridge

volumes:
  frontend_node_modules:
  vosk-models:
  voice_audio: